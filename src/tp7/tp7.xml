<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE program SYSTEM "../../n-genes_0.9/config/genetic.dtd">
<program>

	<constant NAME="min" VALUE="-600"/>
	<constant NAME="max" VALUE="600"/>
	<constant NAME="maxSize" VALUE="30"/>
	<constant NAME="maxStep" VALUE="100"/>
	<constant NAME="popSize" VALUE="200"/>

	<!-- Creating the genetic algorithm -->
	<genetic popSize="#popSize#" safeShutting="true">
		<population/>

		<!-- Declaring the context -->
		<context CLASS="ch.unige.ng.gen.Context" id="context">
			<random CLASS="ch.unige.ng.tools.rng.JavaUtilRandom"/>
		</context>

		<!-- Declaring the individual with the fitness and the factory -->
		<individual CLASS="ch.unige.ng.species.VariableSizeIndividual" indSize="#maxSize#">
			<initializer CLASS="ch.unige.ng.species.initializers.stackGP.FullInitializer">
				<parameter NAME="minDepth" VALUE="3"/>
				<parameter NAME="maxDepth" VALUE="5"/>
				<object reference="context"/>
			</initializer>

			<fitness CLASS="tp7.CustomFitness" id="fitness">
				<parameter NAME="file" VALUE="src\lookup\learn_table.txt"/>
				<object CLASS="ch.unige.ng.species.stackGP.evaluations.Evaluator" id="evaluator">
					<parameter NAME="iterationMax" VALUE="1"/>
				</object>
			</fitness>

			<geneFactory CLASS="ch.unige.ng.species.stackGP.factories.SimpleStackGPGeneFactory">
				<object reference="context"/>
				<object reference="fitness"/>
				<!-- Defining operation list -->
				<object CLASS="ch.unige.ng.species.stackGP.operations.booleans.And"/>
				<object CLASS="ch.unige.ng.species.stackGP.operations.booleans.Not"/>
				<object CLASS="ch.unige.ng.species.stackGP.operations.booleans.Or"/>
				<object CLASS="ch.unige.ng.species.stackGP.operations.booleans.Xor"/>
			</geneFactory>

		</individual>

		<!--<pipe>-->
			<!--<crossover CLASS="ch.unige.ng.ops.crossover.stackGP.SubTreeCrossover">-->
				<!--<parameter NAME="cleaning" VALUE="true"/>-->
			<!--</crossover>-->
			<!--<mutation CLASS="ch.unige.ng.ops.mutation.stackGP.SmartPromoter">-->
				<!--<parameter NAME="maxSize" VALUE="2"/>-->
			<!--</mutation>-->
		<!--</pipe>-->
		<breeder probabilities="0.3;0.7">
			<object CLASS="ch.unige.ng.ops.mutation.GeneralMutation">
				<parameter NAME="mutationProbability" VALUE="0.3"/>
				<parameter NAME="insertionProbability" VALUE="0.4"/>
				<parameter NAME="deletionProbability" VALUE="0.3"/>
			</object>
			<object CLASS="ch.unige.ng.ops.crossover.VarSizeOnePointCrossOver">
				<parameter NAME="politic" VALUE="RANDOM"/>
			</object>
		</breeder>


		<!-- Defining the selection method-->
		<selection CLASS="ch.unige.ng.ops.select.KTournamentSelector" id="selector">
			<parameter NAME="size" VALUE="5"/>
		</selection>

		<!-- Running a timer -->
		<event>
			<condition CLASS="ch.unige.ng.timer.conditions.EndCondition" />
			<condition CLASS="ch.unige.ng.timer.conditions.FrequencyCondition">
				<parameter NAME="frequency" VALUE="1" />
			</condition>
			<listener CLASS="ch.unige.ng.timer.PopulationModifier">
				<object CLASS="ch.unige.ng.ops.mutation.stackGP.ForwardCleaner">
					<parameter NAME="deletionMode" VALUE="FITNESS_DESTRUCTIVE"/>
				</object>
			</listener>
		</event>

		<log>
			<frequencyCondition frequency="10"/>
			<logger>
				<statistic CLASS="ch.unige.ng.statistics.BestStatistic"/>
				<statistic CLASS="ch.unige.ng.statistics.MedianStatistic"/>
				<statistic CLASS="ch.unige.ng.statistics.WorstStatistic"/>
				<statistic CLASS="ch.unige.ng.statistics.EverBestStatistic"/>
				<statistic CLASS="ch.unige.ng.statistics.MeanLengthStatistic"/>
				<statistic CLASS="ch.unige.ng.statistics.WallClockStatistic"/>

				<writer CLASS="ch.unige.ng.tools.io.writer.DefaultWriter" console="true">
					<parameter NAME="header" VALUE="true"/>
					<parameter NAME="separator" VALUE="\t"/>
				</writer>
			</logger>
		</log>

		<log>
			<endCondition/>
			<logger>
				<statistic CLASS="ch.unige.ng.statistics.BestPrinter"/>
				<writer CLASS="ch.unige.ng.tools.io.writer.DefaultWriter" console="true"/>
			</logger>
		</log>

		<halt CLASS="ch.unige.ng.halt.MaximumFitnessHalting">
			<parameter NAME="threshold" VALUE="EPS"/>
		</halt>
		<halt CLASS="ch.unige.ng.halt.MaximumStepHalting">
			<parameter NAME="step" VALUE="#maxStep#"/>
		</halt>

	</genetic>
</program>