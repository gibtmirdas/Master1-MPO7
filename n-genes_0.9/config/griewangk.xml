<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE program SYSTEM "./genetic.dtd">

<program>
    <constant NAME="maxSize" VALUE="10000"/>
    <constant NAME="numIndividuals" VALUE="100"/>
    <constant NAME="mode" VALUE="normal"/>
    <genetic popSize="#numIndividuals#" time="true">
        <!--        <population CLASS="populations.CachingPopulation">-->
        <!--            <parameter NAME="cacheSize" VALUE="100M"/>-->
        <!--        </population>-->
        <population/>

        <!-- Declaring the context -->
        <context id="context">
            <random CLASS="ch.unige.ng.tools.rng.MersenneTwister" seed="12"/>
        </context>

        <individual CLASS="ch.unige.ng.species.VariableSizeIndividual" indSize="#maxSize#">

            <initializer CLASS="ch.unige.ng.species.initializers.stackGP.FullInitializer">
                <parameter NAME="minDepth" VALUE="4"/>
                <parameter NAME="maxDepth" VALUE="6"/>
                <object reference="context"/>
            </initializer>

            <!-- Declaring fitness -->
            <fitness CLASS="ch.unige.ng.fitness.FormulaFitness" id="fitness">
                <parameter NAME="min" VALUE="-100"/>
                <parameter NAME="max" VALUE="100"/>
                <parameter NAME="numTests" VALUE="20"/>
                <parameter NAME="equation" VALUE="x*x +  40"/>
                <object reference="context"/>
                <object CLASS="ch.unige.ng.species.stackGP.evaluations.Evaluator" id="evaluator">
                    <parameter NAME="iterationMax" VALUE="10000"/>
                </object>
            </fitness>

            <geneFactory CLASS="ch.unige.ng.species.stackGP.factories.ProbabilityStackGPGeneFactory">
                <parameter NAME="terminalProbability" VALUE="0.1"/>
                <object reference="fitness"/>
                <object reference="context"/>
                <!-- Defining operation list -->
                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Add"/>
                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Subst"/>
                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Mul"/>
                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Div"/>
                <!--                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Sin"/>-->
                <!--                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Cos"/>-->
                <!--                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Exp"/>-->
                <!--                <object CLASS="ch.unige.ng.species.stackGP.operations.doubles.Log"/>-->
            </geneFactory>


        </individual>

        <pipe>

            <crossover CLASS="ch.unige.ng.ops.crossover.stackGP.SubTreeCrossover"/>

            <breeder probabilities="0.5 ; 0.5">

                <mutation CLASS="ch.unige.ng.ops.utils.Replicator"/>
                <mutation CLASS="ch.unige.ng.ops.mutation.stackGP.SmartPromoter">
                    <parameter NAME="maxSize" VALUE="10"/>
                </mutation>

            </breeder>

        </pipe>

        <selection CLASS="ch.unige.ng.ops.select.KTournamentSelector">
            <parameter NAME="size" VALUE="7"/>
        </selection>


        <log>
            <endCondition/>
            <frequencyCondition frequency="1"/>
            <logger>
                <statistic CLASS="ch.unige.ng.statistics.BestStatistic"/>
                <statistic CLASS="ch.unige.ng.statistics.MeanStatistic"/>
                <statistic CLASS="ch.unige.ng.statistics.WorstStatistic"/>
                <statistic CLASS="ch.unige.ng.statistics.EverBestStatistic"/>
                <statistic CLASS="ch.unige.ng.statistics.STDStatistic"/>

                <writer CLASS="ch.unige.ng.tools.io.writer.DefaultWriter" console="true">
                    <parameter NAME="separator" VALUE="\t"/>
                    <fileprinter clobber="true" NAME="filePrinter">
                        <parameter NAME="filename" VALUE="test.txt"/>
                    </fileprinter>
                </writer>
            </logger>
        </log>

        <halt CLASS="ch.unige.ng.halt.MaximumStepHalting">
            <parameter NAME="step" VALUE="10000"/>
        </halt>

    </genetic>
</program>
